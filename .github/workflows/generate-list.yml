name: Compile Component & Logix Lists

on:
  # Allows you to run this workflow manually from the Actions tab. DO NOT REMOVE.
  workflow_dispatch:

jobs:
  generate-component-list:
    name: "Generate Lists"
    # The type of runner that the job will run on.
    runs-on: ubuntu-latest

    steps:
        # Lets get SteamCMD downloaded.
      - name: Install SteamCMD
        # Check for a NeosVR cache
        if: steps.NeosVRCache.outputs.cache-hit != 'true'
        uses: CyberAndrii/setup-steamcmd@v1.1.1

        # And now to download NeosVR.
      - name: Install NeosVR
        # Check for a NeosVR cache
        if: steps.NeosVRCache.outputs.cache-hit != 'true'
        id: install-neosvr
        run: steamcmd +force_install_dir $HOME/Steam/steamapps/common/NeosVR +login ${{ secrets.PASSCODE }} +app_update 740250 validate +quit

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it.
      - name: Checkout
        uses: actions/checkout@v3.0.2

      # Moves our custom cs file into the correct location.
      - name: Move Scripts
        run: |
          mv $GITHUB_WORKSPACE/script/NeosTypeParser.cs $HOME/Steam/steamapps/common/NeosVR/Neos_Data/Managed/
          mv $GITHUB_WORKSPACE/script/NeosTypeParser.csproj $HOME/Steam/steamapps/common/NeosVR/Neos_Data/Managed/

      # Sets up .NET Core 6.0.x
      - name: Setup .NET Core SDK 6.0.x
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '6.0.x'

      # Runs our custom cs file to generate the list.
      - name: Build Script
        id: generate-list
        run: |
          cd $HOME/Steam/steamapps/common/NeosVR/Neos_Data/Managed/
          dotnet build
          dotnet run

      # Moves our generated list into root of our repo.
      - name: Move Output File
        run: |
          mv $HOME/Steam/steamapps/common/NeosVR/Neos_Data/Managed/ComponentList.txt $GITHUB_WORKSPACE
          mv $HOME/Steam/steamapps/common/NeosVR/Neos_Data/Managed/LogixList.txt $GITHUB_WORKSPACE
          cd $GITHUB_WORKSPACE

      # Commits the changes to the repo.
      - name: Commit
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "Component List"
          git pull origin main
          git add ComponentList.txt
          git add LogixList.txt
          git commit -m "Automatic component list compile" || true

      # Pushes the changes to the repo.
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
